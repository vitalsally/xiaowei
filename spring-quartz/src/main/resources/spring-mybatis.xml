<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:aop="http://www.springframework.org/schema/aop" 
   xmlns:context="http://www.springframework.org/schema/context" 
   xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


 <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:mysql-config.properties" />  
    </bean> 
 <!-- 自动扫描 -->  
    <context:component-scan base-package="com.tucaocun" /> 

	<!-- 配置数据源 -->
	<!-- <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />

		初始化连接大小
		<property name="initialSize" value="0" />
		连接池最大使用连接数量
		<property name="maxActive" value="20" />
		连接池最大空闲
		<property name="maxIdle" value="20" />
		连接池最小空闲
		<property name="minIdle" value="0" />
		获取连接最大等待时间
		<property name="maxWait" value="60000" />

		<property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" value="33" />

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		配置一个连接在池中最小生存的时间，单位是毫秒
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		打开removeAbandoned功能
		<property name="removeAbandoned" value="true" />
		1800秒，也就是30分钟
		<property name="removeAbandonedTimeout" value="1800" />
		关闭abanded连接时输出错误日志
		<property name="logAbandoned" value="true" />

		监控数据库
		<property name="filters" value="stat" />
		<property name="filters" value="mergeStat" />
	</bean> -->


<!--数据源配置--> 
<!-- <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">  
        <property name="poolProperties">  
            <bean class="org.apache.tomcat.jdbc.pool.PoolProperties">  
                <property name="url" value="jdbc:sqlserver://172.168.16.11:1433;databaseName=xgerp"/>  
                <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>  
                <property name="username" value="xgerp_r"/>  
                <property name="password" value="xgerp"/>  
                <property name="jmxEnabled" value="true"/>  
                <property name="testWhileIdle" value="false"/>  
                <property name="testOnBorrow" value="true"/>  
                <property name="validationInterval" value="30000"/>  
                <property name="testOnReturn" value="false"/>  
                <property name="validationQuery" value="select 1"/>  
                <property name="timeBetweenEvictionRunsMillis" value="30000"/>  
                <property name="maxActive" value="100"/>  
                <property name="initialSize" value="10"/>  
                <property name="maxWait" value="10000"/>  
                <property name="removeAbandonedTimeout" value="60"/>  
                <property name="minEvictableIdleTimeMillis" value="30000"/>  
                <property name="minIdle" value="10"/>  
                <property name="logAbandoned" value="true"/> 
                <property name="removeAbandoned" value="true"/>  
                <property name="jdbcInterceptors" value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer"/>  
            </bean>  
        </property>  
    </bean>   -->
    
    <!-- jdbc配置数据源(连接池，proxool) -->
	<!-- <bean id="dataSource"
		  class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<bean class="org.logicalcobwebs.proxool.ProxoolDataSource">
				<property name="driver" value="${driver}" />
				<property name="driverUrl" value="${url}" />
				<property name="user" value="${username}" />
				<property name="password" value="${password}" />
				<property name="maximumConnectionCount" value="${maximumConnectionCount}" />
				<property name="minimumConnectionCount" value="${minimumConnectionCount}" />
				<property name="statistics" value="${proxool.statistics}" />
				<property name="simultaneousBuildThrottle" value="${simultaneousBuildThrottle}" />
				<property name="trace" value="${proxool.trace}" />
			</bean>
		</property>
	</bean> -->
	<!-- c3p0 -->
	 <bean id="dataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"> 

        <property name="driverClass" value="${driver}" /> 

        <property name="jdbcUrl" value="${url}" /> 

        <property name="user" value="${username}" /> 

        <property name="password" value="${password}" /> 

       <!--  连接池中保留的最小连接数。  -->

        <property name="minPoolSize" value="${minimumConnectionCount}" /> 

    <!--     连接池中保留的最大连接数。Default: 15  -->

        <property name="maxPoolSize" value="${maximumConnectionCount}" /> 

       <!--  初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3  -->

        <property name="initialPoolSize" value="${initialPoolSize}" /> 

      <!--   最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0  -->

        <property name="maxIdleTime" value="${maxWait}" /> 

    <!--     当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3  -->

        <property name="acquireIncrement" value="${acquireIncrement}" /> 

      <!--   JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 

                属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 

               如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0  -->

        <property name="maxStatements" value="0" /> 

       <!--  每60秒检查所有连接池中的空闲连接。Default: 0  -->

        <property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}" /> 

     <!--    定义在从数据库获取新连接失败后重复尝试的次数。Default: 30  -->

        <property name="acquireRetryAttempts" value="${acquireRetryAttempts}" /> 
<!-- 
        获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 

         保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 

        获取连接失败后该数据源将申明已断开并永久关闭。Default: false  -->

        <property name="breakAfterAcquireFailure" value="true" /> 

     <!--    因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 

            时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 

             等方法来提升连接测试的性能。Default: false  -->

      <!--   <property name="testConnectionOnCheckout" value="30" />  -->

    </bean> 
    
      <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/tucaocun/mapping/*.xml"></property>  
    </bean>  
     <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.tucaocun.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
     <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
    <!-- 拦截器方式配置事物 -->
<!-- 	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="delAndRepair" propagation="REQUIRED" />

			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />

			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.tucaocun.service..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config> -->
	<!--监控spring jdbc -->
<!-- 	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
		<property name="patterns">
			<list>
				<value>com.jhd.service.*</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config> -->


</beans>